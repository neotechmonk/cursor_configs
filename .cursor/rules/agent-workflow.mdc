# Agent Workflow Rule
# Standardized step-by-step process for agents to follow

<rule>
name: agent_workflow
description: Step-by-step workflow for agents to follow when solving problems
filters:
  - type: file_extension
    pattern: "\\.(md|mdc)$"
  - type: content
    pattern: "(workflow|process|steps|procedure)"
actions:
  - type: suggest
    message: |
      Agent Workflow Rules:

      1. Problem Analysis Phase:
         a) Understand the Request:
            - Read user query carefully
            - Identify key requirements
            - Clarify ambiguous points
            - Confirm understanding

         b) Context Gathering:
            - Examine current workspace
            - Review relevant files
            - Check existing rules and memories
            - Identify constraints and dependencies

         c) Problem Classification:
            - Categorize by type (bug, feature, refactor, etc.)
            - Assess complexity level
            - Identify affected components
            - Determine scope and impact

      2. Solution Design Phase:
         a) Research and Planning:
            - Search for existing solutions
            - Review relevant documentation
            - Check for similar patterns
            - Identify best practices

         b) Solution Options:
            - Generate multiple approaches
            - Evaluate trade-offs
            - Consider maintainability
            - Assess implementation effort

         c) Implementation Plan:
            - Break down into steps
            - Identify dependencies
            - Plan testing approach
            - Consider rollback strategy

      3. Execution Phase:
         a) Preparation:
            - Create/update plan files
            - Set up working environment
            - Backup current state
            - Notify stakeholders if needed

         b) Implementation:
            - Follow planned steps
            - Make incremental changes
            - Test each change
            - Document progress

         c) Quality Assurance:
            - Run tests and checks
            - Validate functionality
            - Review code quality
            - Check for side effects

      4. Documentation Phase:
         a) Update Working Memory:
            - Document decisions made
            - Record solutions implemented
            - Note lessons learned
            - Update relevant documentation

         b) Knowledge Sharing:
            - Create/update guides
            - Share insights with team
            - Update templates if needed
            - Archive completed work

      5. Follow-up Phase:
         a) Validation:
            - Confirm user satisfaction
            - Verify requirements met
            - Check for additional needs
            - Plan next steps if needed

         b) Maintenance:
            - Schedule future reviews
            - Monitor for issues
            - Plan improvements
            - Update workflows

      6. Exception Handling:
         a) When Stuck:
            - Re-examine the problem
            - Research alternative approaches
            - Ask clarifying questions
            - Escalate if necessary

         b) When Blocked:
            - Identify the blocker
            - Document the issue
            - Propose alternatives
            - Request additional resources

      Remember:
      - Always start with understanding
      - Plan before acting
      - Document as you go
      - Test incrementally
      - Learn from each interaction
      - Follow established patterns

examples:
  - input: |
      # Workflow execution example
      1. Problem Analysis: User needs authentication system
      2. Context Gathering: Review existing codebase, check for auth patterns
      3. Solution Design: Research auth libraries, plan implementation
      4. Execution: Implement step by step, test each component
      5. Documentation: Update working memory, create user guide
      6. Follow-up: Validate with user, plan future improvements

  - input: |
      # Exception handling example
      When encountering a blocking issue:
      - Document the blocker in updates.md
      - Research alternative approaches
      - Ask user for clarification
      - Propose workaround or different approach

metadata:
  priority: critical
  version: 1.0
  tags:
    - workflow
    - process
    - problem-solving
    - agent-guidance
    - methodology
</rule>
description:
globs:
alwaysApply: false
---
